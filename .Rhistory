geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 15e6, xmax = 15e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 20e6, xmax = 20e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 25e6, xmax = 25e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 30e6, xmax = 30e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 35e6, xmax = 35e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 40e6, xmax = 40e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 45e6, xmax = 45e6), color = "black") +
geom_text(aes(y = 0.01, x = 10e6), label = "10", size = 3) +
geom_text(aes(y = 0.01, x = 15e6), label = "15", size = 3) +
geom_text(aes(y = 0.01, x = 20e6), label = "20", size = 3) +
geom_text(aes(y = 0.01, x = 25e6), label = "25", size = 3) +
geom_text(aes(y = 0.01, x = 35e6), label = "35", size = 3) +
geom_text(aes(y = 0.01, x = 40e6), label = "40", size = 3) +
geom_text(aes(y = 0.01, x = 45e6), label = "45", size = 3) +
geom_text(aes(y = 0.01, x = 30e6), label = "30", size = 3) +
# add c.e. tick lines
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = difference, xmax = difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 5e6+difference, xmax = 5e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 10e6+difference, xmax = 10e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 15e6+difference, xmax = 15e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 20e6+difference, xmax = 20e6+difference), color = "black") +
geom_text(aes(y = 11, x = difference), label = "0", size = 3) +
geom_text(aes(y = 11, x = 5e6+difference), label = "5", size = 3) +
geom_text(aes(y = 11, x = 10e6+difference), label = "10", size = 3) +
geom_text(aes(y = 11, x = 15e6+difference), label = "15", size = 3) +
geom_text(aes(y = 11, x = 20e6+difference), label = "20", size = 3) +
labs(x = "Genomic position (Mb)")
ggsave("~/Dropbox/AndersenLab/LabFolders/Katie/projects/abamectin/manuscript/figures/Fig5_hc_overlap3.png", height = 3.5, width = 7.5)
ggplot() +
geom_segment(data=filtered_table3 %>%
dplyr::filter(HCON_interval == "N"),
aes(y = 1, yend=10, x=HCON_position, xend=CELE_position+difference),
size = 0.25, color = "grey") +
geom_segment(data=filtered_table3 %>%
dplyr::filter(HCON_interval == "Y"),
aes(y = 1, yend=10, x=HCON_position, xend=CELE_position+difference),
size = 0.5, color = line_color) +
# scale_color_manual(name = "Shared interval", values = c("#4a4a49", line_color), labels = c("No", "Yes")) +
# scale_size_manual(name = "Shared interval",values = c(0.25, 0.5), labels = c("No", "Yes")) +
# theme_bw(12) +
theme_bw(12) +
# header and footer boxes
geom_rect(aes(ymin=10, ymax=10.7, xmin=difference, xmax=CELE_chrV_length+difference), fill="#fcbc7a", colour=NA) + # grey90
geom_rect(aes(ymin=0.3, ymax=1, xmin=0, xmax=HCON_chrV_length), fill="#bedb92", colour=NA) + # grey60
# VL region
geom_rect(aes(ymin=10, ymax=10.7, xmin=1+difference, xmax=4333001+difference), fill=ce_color, alpha = 0.8,colour=NA, size=0.3) +
geom_text(aes(x=difference+2166500, y=10.35), label= "VL", color = "black", size = 3) +
# VC region
geom_rect(aes(ymin=10, ymax=10.7, xmin=5260997+difference, xmax=7342129+difference), fill=ce_color, alpha = 0.8,colour=NA, size=0.3) +
geom_text(aes(x=difference+6301563, y=10.35), label= "VC", color = "black" , size = 3) +
# header and footer text
# geom_text(aes(x=difference+(CELE_chrV_length/2), y=10.3), label=expression(~bolditalic('C. elegans')~bold(''))) +
# geom_text(aes(x=difference+(CELE_chrV_length/2), y=0.7), label=expression(~bolditalic('H. contortus')~bold(''))) +
geom_text(aes(x=difference+(CELE_chrV_length*0.7), y=10.35), label=expression(~bolditalic('C. elegans')~bold('chrV'))) +
geom_text(aes(x=(CELE_chrV_length)-difference, y=0.65), label=expression(~bolditalic('H. contortus')~bold('chrV'))) + ## CAN  YOU SEE TEXT IF NOT WHITE?????
# VR region
# geom_rect(aes(ymin=10, ymax=10.6, xmin=15933659+difference, xmax=16336743+difference), fill="skyblue", alpha = 0.3,colour="black", size=0.3) +
# position of H. contortus intervals
geom_rect(aes(ymin=0.3, ymax=1, xmin=37000000, xmax=42000000), fill=hc_color, color=NA, alpha = 0.8) +
geom_rect(aes(ymin=0.3, ymax=1, xmin=45000000, xmax=48000000), fill=hc_color, color=NA, alpha = 0.8) +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(face = "bold")) +
# header and footer outline
geom_rect(aes(ymin=10, ymax=10.7, xmin=difference, xmax=CELE_chrV_length+difference), fill=NA, colour="black", size = 0.3) +
geom_rect(aes(ymin=0.3, ymax=1, xmin=0, xmax=HCON_chrV_length), fill=NA, colour="black", size = 0.3) +
# add tick lines?
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 0, xmax = 0), color = "black") +
geom_text(aes(y = 0.01, x = 0), label = "0", size = 3) +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 5e6, xmax = 5e6), color = "black") +
geom_text(aes(y = 0.01, x = 5e6), label = "5", size = 3) +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 10e6, xmax = 10e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 15e6, xmax = 15e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 20e6, xmax = 20e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 25e6, xmax = 25e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 30e6, xmax = 30e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 35e6, xmax = 35e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 40e6, xmax = 40e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 45e6, xmax = 45e6), color = "black") +
geom_text(aes(y = 0.01, x = 10e6), label = "10", size = 3) +
geom_text(aes(y = 0.01, x = 15e6), label = "15", size = 3) +
geom_text(aes(y = 0.01, x = 20e6), label = "20", size = 3) +
geom_text(aes(y = 0.01, x = 25e6), label = "25", size = 3) +
geom_text(aes(y = 0.01, x = 35e6), label = "35", size = 3) +
geom_text(aes(y = 0.01, x = 40e6), label = "40", size = 3) +
geom_text(aes(y = 0.01, x = 45e6), label = "45", size = 3) +
geom_text(aes(y = 0.01, x = 30e6), label = "30", size = 3) +
# add c.e. tick lines
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = difference, xmax = difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 5e6+difference, xmax = 5e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 10e6+difference, xmax = 10e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 15e6+difference, xmax = 15e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 20e6+difference, xmax = 20e6+difference), color = "black") +
geom_text(aes(y = 11, x = difference), label = "0", size = 3) +
geom_text(aes(y = 11, x = 5e6+difference), label = "5", size = 3) +
geom_text(aes(y = 11, x = 10e6+difference), label = "10", size = 3) +
geom_text(aes(y = 11, x = 15e6+difference), label = "15", size = 3) +
geom_text(aes(y = 11, x = 20e6+difference), label = "20", size = 3) +
labs(x = "Genomic position (Mb)")
ggsave("~/Dropbox/AndersenLab/LabFolders/Katie/projects/abamectin/manuscript/figures/Fig5_hc_overlap4.png", height = 3.5, width = 7.5)
line_color <- "black"
ggplot() +
geom_segment(data=filtered_table3 %>%
dplyr::filter(HCON_interval == "N"),
aes(y = 1, yend=10, x=HCON_position, xend=CELE_position+difference),
size = 0.25, color = "grey") +
geom_segment(data=filtered_table3 %>%
dplyr::filter(HCON_interval == "Y"),
aes(y = 1, yend=10, x=HCON_position, xend=CELE_position+difference),
size = 0.5, color = line_color) +
# scale_color_manual(name = "Shared interval", values = c("#4a4a49", line_color), labels = c("No", "Yes")) +
# scale_size_manual(name = "Shared interval",values = c(0.25, 0.5), labels = c("No", "Yes")) +
# theme_bw(12) +
theme_bw(12) +
# header and footer boxes
geom_rect(aes(ymin=10, ymax=10.7, xmin=difference, xmax=CELE_chrV_length+difference), fill="#fcbc7a", colour=NA) + # grey90
geom_rect(aes(ymin=0.3, ymax=1, xmin=0, xmax=HCON_chrV_length), fill="#bedb92", colour=NA) + # grey60
# VL region
geom_rect(aes(ymin=10, ymax=10.7, xmin=1+difference, xmax=4333001+difference), fill=ce_color, alpha = 0.8,colour=NA, size=0.3) +
geom_text(aes(x=difference+2166500, y=10.35), label= "VL", color = "black", size = 3) +
# VC region
geom_rect(aes(ymin=10, ymax=10.7, xmin=5260997+difference, xmax=7342129+difference), fill=ce_color, alpha = 0.8,colour=NA, size=0.3) +
geom_text(aes(x=difference+6301563, y=10.35), label= "VC", color = "black" , size = 3) +
# header and footer text
# geom_text(aes(x=difference+(CELE_chrV_length/2), y=10.3), label=expression(~bolditalic('C. elegans')~bold(''))) +
# geom_text(aes(x=difference+(CELE_chrV_length/2), y=0.7), label=expression(~bolditalic('H. contortus')~bold(''))) +
geom_text(aes(x=difference+(CELE_chrV_length*0.7), y=10.35), label=expression(~bolditalic('C. elegans')~bold('chrV'))) +
geom_text(aes(x=(CELE_chrV_length)-difference, y=0.65), label=expression(~bolditalic('H. contortus')~bold('chrV'))) + ## CAN  YOU SEE TEXT IF NOT WHITE?????
# VR region
# geom_rect(aes(ymin=10, ymax=10.6, xmin=15933659+difference, xmax=16336743+difference), fill="skyblue", alpha = 0.3,colour="black", size=0.3) +
# position of H. contortus intervals
geom_rect(aes(ymin=0.3, ymax=1, xmin=37000000, xmax=42000000), fill=hc_color, color=NA, alpha = 0.8) +
geom_rect(aes(ymin=0.3, ymax=1, xmin=45000000, xmax=48000000), fill=hc_color, color=NA, alpha = 0.8) +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
axis.title.x = element_text(face = "bold")) +
# header and footer outline
geom_rect(aes(ymin=10, ymax=10.7, xmin=difference, xmax=CELE_chrV_length+difference), fill=NA, colour="black", size = 0.3) +
geom_rect(aes(ymin=0.3, ymax=1, xmin=0, xmax=HCON_chrV_length), fill=NA, colour="black", size = 0.3) +
# add tick lines?
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 0, xmax = 0), color = "black") +
geom_text(aes(y = 0.01, x = 0), label = "0", size = 3) +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 5e6, xmax = 5e6), color = "black") +
geom_text(aes(y = 0.01, x = 5e6), label = "5", size = 3) +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 10e6, xmax = 10e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 15e6, xmax = 15e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 20e6, xmax = 20e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 25e6, xmax = 25e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 30e6, xmax = 30e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 35e6, xmax = 35e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 40e6, xmax = 40e6), color = "black") +
geom_rect(aes(ymin = 0.2, ymax = 0.3, xmin = 45e6, xmax = 45e6), color = "black") +
geom_text(aes(y = 0.01, x = 10e6), label = "10", size = 3) +
geom_text(aes(y = 0.01, x = 15e6), label = "15", size = 3) +
geom_text(aes(y = 0.01, x = 20e6), label = "20", size = 3) +
geom_text(aes(y = 0.01, x = 25e6), label = "25", size = 3) +
geom_text(aes(y = 0.01, x = 35e6), label = "35", size = 3) +
geom_text(aes(y = 0.01, x = 40e6), label = "40", size = 3) +
geom_text(aes(y = 0.01, x = 45e6), label = "45", size = 3) +
geom_text(aes(y = 0.01, x = 30e6), label = "30", size = 3) +
# add c.e. tick lines
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = difference, xmax = difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 5e6+difference, xmax = 5e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 10e6+difference, xmax = 10e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 15e6+difference, xmax = 15e6+difference), color = "black") +
geom_rect(aes(ymin = 10.7, ymax = 10.8, xmin = 20e6+difference, xmax = 20e6+difference), color = "black") +
geom_text(aes(y = 11, x = difference), label = "0", size = 3) +
geom_text(aes(y = 11, x = 5e6+difference), label = "5", size = 3) +
geom_text(aes(y = 11, x = 10e6+difference), label = "10", size = 3) +
geom_text(aes(y = 11, x = 15e6+difference), label = "15", size = 3) +
geom_text(aes(y = 11, x = 20e6+difference), label = "20", size = 3) +
labs(x = "Genomic position (Mb)")
ggsave("~/Dropbox/AndersenLab/LabFolders/Katie/projects/abamectin/manuscript/figures/Fig5_hc_overlap5.png", height = 3.5, width = 7.5)
###############################
# IMPORTANT!!!!!
# Set working directory
setwd("~/Dropbox/AndersenLab/LabFolders/Katie/git/zinc_manuscript/")
library(tidyverse)
library(linkagemapping)
library(cegwas2)
library(ggtree)
library(phangorn)
library(ape)
library(grid)
library(gridExtra)
library(ggplotify)
tsize <- 12
load("data/extra_data/gene_annotations.Rda")
load("data/extra_data/FileS9_eqtlmap.Rda")
load("data/extra_data/eqtl_probes.Rda")
load("data/extra_data/FileS8_eqtlpheno.Rda")
# linkage mapping function
plot_lods <- function(map, tsize = 12) {
map1 <- map %>%
dplyr::group_by(marker, condtrt) %>%
dplyr::filter(lod == max(lod))
cis <- map %>%
dplyr::group_by(marker, condtrt) %>%
dplyr::mutate(maxlod = max(lod)) %>%
dplyr::group_by(iteration, condtrt) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
totalmap <- NULL
if(nrow(cis) > 0) {
for(i in unique(cis$condtrt)) {
drugci <- cis %>%
dplyr::filter(condtrt == i)
drugmap <- map1 %>%
dplyr::filter(condtrt == i)
map2 <- linkagemapping:::cidefiner(drugci, drugmap)
totalmap <- rbind(totalmap, map2)
}
totalmap$condtrt <- gsub("_", "\n", totalmap$condtrt)
cis$condtrt <- gsub("_", "\n", cis$condtrt)
ggplot2::ggplot(totalmap) +
ggplot2::aes(x = pos/1e+06,y = lod) +
ggplot2::geom_ribbon(ggplot2::aes(x = pos/1e+06,ymin = 0, ymax = ci_lod), fill = "skyblue", alpha = 0.5) +
ggplot2::geom_point(data = cis, ggplot2::aes(x = pos/1e+06,y = (1.05 * maxlod)), fill = "red", shape = 25,
size = tsize/7, show.legend = FALSE, color = "red") +
ggplot2::geom_text(data = cis, ggplot2::aes(x = pos/1e+06, y = (1.2 * maxlod), label = paste0(100 *round(var_exp, digits = 3), "%")),
size = tsize/5, colour = "black", hjust = "inward") +
# ggrepel::geom_text_repel(data = cis, ggplot2::aes(x = pos/1e+06, y = (1.5 * maxlod), label = paste0(100 *round(var_exp, digits = 3), "%")),
#                    size = tsize/5, colour = "black") +
ggplot2::geom_line(size = tsize/25, alpha = 0.85) +
ggplot2::facet_grid(~ chr, scales = "free", space = "free_x") +
ggplot2::labs(x = "Genomic position (Mb)", y = "LOD") +
ggplot2::scale_colour_discrete(name = "Mapping\nIteration") +
# ggplot2::scale_x_continuous(expand = c(0,0)) +
# ggplot2::scale_y_continuous(expand = expand_scale(mult=c(0,0.1))) +
ggplot2::theme_bw(tsize) +
ggplot2::theme(
axis.text = ggplot2::element_text(color = "black", face = "bold"),
axis.title = ggplot2::element_text(face = "bold", color = "black"),
strip.text = ggplot2::element_text(face = "bold", color = "black"),
plot.title = ggplot2::element_blank(),
panel.grid = ggplot2::element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6))
} else {
totalmap <- map1
totalmap$condtrt <- gsub("_", "\n", totalmap$condtrt)
ggplot2::ggplot(totalmap) +
ggplot2::aes(x = pos/1e+06,y = lod) +
ggplot2::geom_line(size = tsize/25, alpha = 0.85) +
ggplot2::facet_grid( ~ chr, scales = "free", space = "free_x") +
ggplot2::labs(x = "Genomic position (Mb)", y = "LOD") +
ggplot2::theme_bw(tsize) +
ggplot2::theme(
axis.text.x = ggplot2::element_text(color = "black", face = "bold"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black"),
axis.title.y = ggplot2::element_text(face = "bold", color = "black"),
strip.text.x = ggplot2::element_text(face = "bold", color = "black"),
strip.text.y = ggplot2::element_text(face = "bold", color = "black"),
plot.title = ggplot2::element_blank(),
panel.grid = ggplot2::element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6))
}
}
# function for PxG
plot_pxg <- function(cross, map, tsize = 12, yaxis = "Relative animal length") {
# get unique QTL peaks
peaks <- map %>%
dplyr::group_by(iteration, condition) %>%
dplyr::filter(!is.na(var_exp)) %>%
dplyr::do(head(., n = 1))
# clean the markers and column names
uniquemarkers <- gsub("-", "\\.", unique(peaks$marker))
colnames(cross$pheno) <- gsub("-", "\\.", colnames(cross$pheno))
colnames(cross$pheno) <- stringr::str_replace(colnames(cross$pheno), "\\.", "_")
# get only the traits of interest
pheno <- cross$pheno %>%
dplyr::select(dplyr::one_of(map$condtrt))
# get the genotype for the RIAILs and add to pheno
geno <- data.frame(linkagemapping:::extract_genotype(cross)) %>%
dplyr::select(which(colnames(.) %in% uniquemarkers)) %>%
data.frame(., pheno)
# reorder data and change -1 and 1 to N2 and CB and plot!
df <- geno %>%
tidyr::gather(marker, genotype, -dplyr::one_of(map$condtrt)) %>%
dplyr::mutate(genotype = dplyr::case_when(genotype == -1 ~ "N2",
genotype == 1 ~ "CB4856",
TRUE ~ "NA")) %>%
tidyr::gather(trait, phenotype, dplyr::one_of(map$condtrt)) %>%
dplyr::mutate(genotype = factor(genotype, levels = c("N2", "CB4856"), labels= c("N2", "CB4856"))) %>%
dplyr::left_join(peaks, by = c("marker", "trait" = "condtrt")) %>%
tidyr::drop_na(lod) %>%
dplyr::mutate(marker = stringr::str_replace(marker, "_", ":"),
trait = stringr::str_split_fixed(trait, "_", 2)[,2],
pos = as.numeric(stringr::str_split_fixed(marker, ":", 2)[,2])) %>%
dplyr::arrange(chr, pos) %>%
tidyr::drop_na(genotype)
df %>%
ggplot2::ggplot(.) +
ggplot2::aes(x = genotype, y = phenotype) +
ggplot2::geom_jitter(width = 0.1, size = 0.07, alpha = 0.5) +
ggplot2::geom_boxplot(ggplot2::aes(fill = genotype, alpha = 0.5), size = 0.2, outlier.shape = NA) +
ggplot2::scale_fill_manual(values = c(`N2` = "orange", `CB4856` = "blue")) +
ggplot2::facet_grid(~factor(marker, unique(df$marker)), scales = "free") +
ggplot2::theme_bw(tsize) +
ggplot2::theme(axis.text.x = ggplot2::element_text(face = "bold", color = "black"),
axis.text.y = ggplot2::element_text(face = "bold", color = "black"),
axis.title.x = ggplot2::element_text(face = "bold", color = "black", vjust = -0.3),
axis.title.y = ggplot2::element_text(face = "bold", color = "black"),
strip.text.x = ggplot2::element_text(face = "bold", color = "black"),
strip.text.y = ggplot2::element_text(face = "bold", color = "black"),
# axis.title.x = element_blank(),
plot.title = ggplot2::element_blank(),
legend.position = "none",
panel.grid = element_blank(),
panel.background = ggplot2::element_rect(color = NA, size = 0.6)) +
ggplot2::labs(x = "Genotype at QTL", y = yaxis)
}
# plot NIL pheno and geno with stats
plot_nil <- function(phenodf, genodf, statdf, strains, chr, tsize = 12, ylab = "Animal length") {
# plot phenotype
pheno <- phenodf %>%
dplyr::group_by(strain, condition) %>%
dplyr::mutate(phen = max(phenotype) + 0.1) %>%
dplyr::ungroup() %>%
dplyr::full_join(statdf, by = c("strain", "condition", "trait")) %>%
dplyr::mutate(strain = factor(strain,
levels = rev(strains))) %>%
dplyr::filter(!is.na(strain),
strain %in% strains) %>%
ggplot(.) +
aes(x = strain, y = phenotype, fill = strain_fill) +
geom_jitter(width = 0.1, size = 0.05) +
geom_boxplot(outlier.color = NA, alpha = 0.5, size = 0.2) +
ggplot2::geom_text(aes(label = sig, y = phen, color = groups), size = tsize/4, angle = -90) +
scale_fill_manual(values = c("N2" = "orange", "CB" = "blue", "NIL" = "grey")) +
scale_color_manual(values = c("N2" = "orange", "CB" = "blue")) +
theme_bw(tsize) +
theme(axis.text.x = element_text(face="bold", color="black"),
axis.title.x = element_text(face="bold", color="black"),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
strip.text = element_text(face = "bold", color = "black"),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
coord_flip() +
labs(x = " ", y = ylab)  +
facet_grid(~condition)
# plot chrV genotype
chrgeno <- genodf %>%
dplyr::filter(chrom == chr,
sample %in% strainset) %>%
dplyr::mutate(chrom = paste0("chr", chr),
sample = factor(sample, levels = strainset)) %>%
dplyr::distinct() %>%
ggplot(.)+
geom_segment(aes(x = start/1e6, y = sample, xend = end/1e6, yend = sample, color = gt_name, size = 2), alpha = 0.7)+
facet_grid(~chrom, scales = "free",  space = "free")+
scale_color_manual(values=c("N2"="orange","CB4856"="blue"))+
theme_bw(tsize) +
theme(axis.text.x = element_text(face="bold", color="black"),
axis.text.y = element_text(face="bold", color="black"),
axis.ticks.y = element_blank(),
# axis.text.y = element_blank(),
axis.title.x = element_text(face="bold", color="black"),
axis.title.y = element_text(face="bold", color="black"),
strip.text = element_text(face = "bold", color = "black"),
plot.title = element_text(face="bold"),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
labs(x = "Genomic position (Mb)", y = "")
# plot genome background
back <- genodf %>%
dplyr::filter(sample %in% strainset,
chrom == ifelse(chr == "III", "II", "III")) %>%
dplyr::mutate(bp = end - start) %>%
dplyr::group_by(sample, gt_name) %>%
dplyr::summarize(max = sum(bp)) %>%
dplyr::arrange(desc(max)) %>%
dplyr::filter(max == first(max)) %>%
dplyr::mutate(start = 0,
end = 15e6,
chr = "Genome")  %>%
dplyr::ungroup() %>%
dplyr::mutate(sample = factor(sample, levels = strainset)) %>%
ggplot(.)+
geom_segment(aes(x = start/1e6, y = sample, xend = end/1e6, yend = sample, color = gt_name, size = 2), alpha = 0.7)+
facet_grid(~chr, scales = "free",  space = "free")+
scale_color_manual(values=c("N2"="orange","CB4856"="blue"))+
theme_bw(tsize) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
legend.position = "none",
axis.ticks = element_blank(),
panel.grid = element_blank(),
strip.text.x = element_text(face = "bold", color = "black"),
strip.text.y = element_blank())+
labs(x = "Genomic position (Mb)", y = "")
# return objects
return(list(chrgeno, back, pheno))
}
# Look for genes in interval
query_genes <- function(region, GO = NULL, strain = "CB4856") {
# filter eqtl to > 5% VE
eqtlmap2 <- eqtlmap %>%
dplyr::filter(var_exp >= 0.05)
# how many genes are in the interval?
all_genes <- cegwas2::query_vcf(region, impact = c("LOW", "MODERATE", "HIGH", "MODIFIER"), samples = strain)
print(glue::glue("There are {length(unique(all_genes$gene_id))} genes in the interval {region}"))
# how many eQTL map to this region?
chrom <- stringr::str_split_fixed(region, ":", 2)[,1]
left_pos <- as.numeric(stringr::str_split_fixed(stringr::str_split_fixed(region, ":", 2)[,2], "-", 2)[,1])
right_pos <- as.numeric(stringr::str_split_fixed(stringr::str_split_fixed(region, ":", 2)[,2], "-", 2)[,2])
all_eQTL <- eqtlmap2 %>%
dplyr::filter(chr == chrom,
ci_l_pos < right_pos,
ci_r_pos > left_pos)
print(glue::glue("There are {nrow(all_eQTL)} eQTL ({length(unique(all_eQTL$trait))} traits) that map to {region}"))
# all eQTL probes
all_eQTL_probes <- eqtl_probes %>%
dplyr::filter(probe %in% all_eQTL$trait) %>%
dplyr::left_join(gene_annotations, by = "gene_id")
# which of the eQTL are overlapping with genes in interval?
eQTL_outside_CI <- all_eQTL_probes %>%
dplyr::filter(!wbgene %in% all_genes$gene_id)
print(glue::glue("There are {nrow(all_eQTL)-length(unique(eQTL_outside_CI$wbgene))} genes in the region with an eQTL and {length(unique(eQTL_outside_CI$wbgene))} genes outside the region with an eQTL"))
# Total genes of interest:
print(glue::glue("There are {length(unique(all_genes$gene_id)) + length(unique(eQTL_outside_CI$wbgene))} total genes of interest."))
# how many of the genes in interval have variation?
vars <- all_genes %>%
dplyr::mutate(GT = ifelse(a1 == REF, "ref", "alt")) %>%
dplyr::filter(GT == "alt")
# genes with protein coding vars
proteincode <- vars %>%
dplyr::filter(impact %in% c("MODERATE", "HIGH"))
print(glue::glue("There are {length(unique(vars$gene_id))}/{length(unique(all_genes$gene_id))} genes in interval with genetic variation, {length(unique(proteincode$gene_id))}/{length(unique(vars$gene_id))} have protein-coding variation"))
# should I look at GO annotations?
if(!is.null(GO)) {
# total genes with GO annotations
go_genes <- gene_annotations %>%
dplyr::filter(wbgene %in% c(all_genes$gene_id, eQTL_outside_CI$wbgene)) %>%
dplyr::filter_all(any_vars(stringr::str_detect(., pattern = GO)))
print(glue::glue("There are {length(unique(go_genes$wbgene))}/{length(unique(all_genes$gene_id)) + length(unique(eQTL_outside_CI$wbgene))} genes with {GO} annotation"))
# genes with GO annotations and variation
go_var <- gene_annotations %>%
dplyr::filter(wbgene %in% vars$gene_id) %>%
dplyr::filter_all(any_vars(stringr::str_detect(., pattern = GO)))
print(glue::glue("There are {length(unique(go_var$wbgene))}/{length(unique(go_genes$wbgene))} genes with {GO} annotation AND genetic variation"))
# genes with GO annotation and protein-coding variation
go_pcvar <- gene_annotations %>%
dplyr::filter(wbgene %in% proteincode$gene_id) %>%
dplyr::filter_all(any_vars(stringr::str_detect(., pattern = GO)))
print(glue::glue("There are {length(unique(go_pcvar$wbgene))}/{length(unique(go_genes$wbgene))} genes with {GO} annotation AND protein-coding genetic variation"))
# genes with GO annotation and eQTL
go_eqtl <- gene_annotations %>%
dplyr::filter(wbgene %in% all_eQTL_probes$wbgene) %>%
dplyr::filter_all(any_vars(stringr::str_detect(., pattern = GO)))
print(glue::glue("There are {length(unique(go_eqtl$wbgene))}/{length(unique(go_genes$wbgene))} genes with {GO} annotation AND eQTL"))
# return final dataframe with all info (might be off, only has 133 instead of 134?)
total_genes <- gene_annotations %>%
dplyr::filter(wbgene %in% c(all_genes$gene_id, eQTL_outside_CI$wbgene)) %>%
dplyr::mutate(inside_CI = ifelse(wbgene %in% all_genes$gene_id, T, F),
eqtl = ifelse(wbgene %in% all_eQTL_probes$wbgene, T, F),
vars = ifelse(wbgene %in% vars$gene_id, T, F),
pc_vars = ifelse(wbgene %in% proteincode$gene_id, T, F),
go_annotation = ifelse(wbgene %in% go_genes$wbgene, T, F))
} else {
# return final dataframe with all info (might be off, only has 133 instead of 134?)
total_genes <- gene_annotations %>%
dplyr::filter(wbgene %in% c(all_genes$gene_id, eQTL_outside_CI$wbgene)) %>%
dplyr::mutate(inside_CI = ifelse(wbgene %in% all_genes$gene_id, T, F),
eqtl = ifelse(wbgene %in% all_eQTL_probes$wbgene, T, F),
vars = ifelse(wbgene %in% vars$gene_id, T, F),
pc_vars = ifelse(wbgene %in% proteincode$gene_id, T, F),
go_annotation = NA)
}
return(total_genes)
}
riailpheno <- read.csv("data/S3_File.csv")
linkagemapping::load_cross_obj("N2xCB4856cross_full2")
zincmap <- read.csv("data/S4_File.csv")
zincmap <- read.csv("data/S4_File.csv")
chrVbreakup <- read.csv("data/S11_File.csv")
HTA_stats <- read.csv("data/S10_File.csv")
nilgeno <- read.csv("data/S8_File.csv")
# qtl peaks
peaks <- zincmap %>%
dplyr::filter(trait == "zinc_median.EXT") %>%
na.omit() %>%
dplyr::filter(chr == "V")
# plot
trt <- "median.EXT"
tsize <- 12
strainset <- rev(c("N2", "CB4856", "ECA481", "ECA437", "ECA411"))
# regress
regressed <- easysorter::regress(chrVbreakup) %>%
dplyr::filter(trait == trt) %>%
dplyr::mutate(strain_fill = dplyr::case_when(strain %in% c("N2") ~ "N2",
strain %in% c("CB4856") ~ "CB",
TRUE ~ "NIL"),
groups = dplyr::case_when(strain == "N2" ~ "N2",
TRUE ~ "CB")) %>%
dplyr::mutate(rel_pheno = ((phenotype - min(phenotype, na.rm = T)) / (max(phenotype, na.rm = T) - min(phenotype, na.rm = T)))) %>%
dplyr::mutate(phenotype = rel_pheno)
library(easysorter)
regressed <- easysorter::regress(chrVbreakup) %>%
dplyr::filter(trait == trt)
View(chrVbreakup)
